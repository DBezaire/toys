Toys dev notes

ToDo
- eliminate path.js


2021-07-20
As of end of first build with node and express:
- classes
  - worked well for sliders and buttons with many instances
  - also useful for metrotimer to add reporting elements
  
- AudioContext
  - amazing timing functions
  - used oscillator, noise buffer, samples, gains
  ??? still get CORS error for sample from heroku
  
- heroku
  - easy to create dynos to run app
  - easy to use GIT to deploy to heroku
  - heroku app on PC manages most heroku functions without logging in there
  - run local copy: heroku local
  - show ongoing logs: heroku logs --num=20 --dyno=web --tail
  - Beware: barfed on fixed port assignment: had to get from environment variable
  - Procfile contains startup command; currently set to get from package.json
  
- GIT
  - two repos now on GITHUB
  - typical process: 
    - git status
    - git add .
    - git commit -m "message"
    - git push heroku main
    - git push origin main
    
- Node.js
  - run server with command: node app.js
  - same gets done with npm start because that's what's defined in package.json
  
npm
  - installs and maintains Node.js modules (and maybe others?)
  - seems driven by contents of package.json
  - does it keep up with new versions automatically??
  
- nodemon
  - node module to restart automatically after changes
  - start with command: nodemon [app.js]
  - if app to run is left off, gets it from package.json
  
- morgan
  - node module to enhance debug printing to console
  - didn't figure much out about this, so turned it off for now
  - seems can control with DEBUG environment variable??
  - thus command to start might be "DEBUG=toys:* nodemon app.js"
  
- express
  - node module to simplify web request handling
  - had to limit the "express.static" with a '/static' path to keep strange things from happening
  - had to calculate port from environment variable so it will work on heroku which barfs on fixed assignment
  - really forced use of a template engine so used 'sprightly' which is very light weight
  - auto configurator module built a structure that was somewhat overkill; 
    - replaced ./bin/www with call to app.listen in app.js
  - path.js can be disbanded by (a) not used anywhere so put into app.js; or (b) get app.js to export the paths
  
-CORS
  - Browser refuses to load resource from another domain if it does not have a 
  - "Access-Control-Allow-Origin" header allowing same.
  - Discovered this trying to load hihat.wav sound from external website into a page that had
  - been served from localhost.
  - Did this because browser refused to load the file directly from the file system.
  - Test (see ./unused/cors-headers.js) proved how to add the required header.
  - However, changed url for the sound file request to a relative link ("./static/sounds/xx.wav").
  - This is not blocked by browser, so no need to load cross domains.
  - Therefore archived the test to "./unused").